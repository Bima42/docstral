/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PaletteRouteImport } from './routes/palette'
import { Route as SplatRouteImport } from './routes/$'
import { Route as ChatsIndexRouteImport } from './routes/chats/index'
import { Route as ChatsChatIdRouteImport } from './routes/chats/$chatId'

const PaletteRoute = PaletteRouteImport.update({
  id: '/palette',
  path: '/palette',
  getParentRoute: () => rootRouteImport,
} as any)
const SplatRoute = SplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatsIndexRoute = ChatsIndexRouteImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatsChatIdRoute = ChatsChatIdRouteImport.update({
  id: '/chats/$chatId',
  path: '/chats/$chatId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/$': typeof SplatRoute
  '/palette': typeof PaletteRoute
  '/chats/$chatId': typeof ChatsChatIdRoute
  '/chats': typeof ChatsIndexRoute
}
export interface FileRoutesByTo {
  '/$': typeof SplatRoute
  '/palette': typeof PaletteRoute
  '/chats/$chatId': typeof ChatsChatIdRoute
  '/chats': typeof ChatsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/$': typeof SplatRoute
  '/palette': typeof PaletteRoute
  '/chats/$chatId': typeof ChatsChatIdRoute
  '/chats/': typeof ChatsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/$' | '/palette' | '/chats/$chatId' | '/chats'
  fileRoutesByTo: FileRoutesByTo
  to: '/$' | '/palette' | '/chats/$chatId' | '/chats'
  id: '__root__' | '/$' | '/palette' | '/chats/$chatId' | '/chats/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  SplatRoute: typeof SplatRoute
  PaletteRoute: typeof PaletteRoute
  ChatsChatIdRoute: typeof ChatsChatIdRoute
  ChatsIndexRoute: typeof ChatsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/palette': {
      id: '/palette'
      path: '/palette'
      fullPath: '/palette'
      preLoaderRoute: typeof PaletteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chats/': {
      id: '/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof ChatsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chats/$chatId': {
      id: '/chats/$chatId'
      path: '/chats/$chatId'
      fullPath: '/chats/$chatId'
      preLoaderRoute: typeof ChatsChatIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  SplatRoute: SplatRoute,
  PaletteRoute: PaletteRoute,
  ChatsChatIdRoute: ChatsChatIdRoute,
  ChatsIndexRoute: ChatsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
