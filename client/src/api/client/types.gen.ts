// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};

/**
 * ChatCreate
 */
export type ChatCreate = {
    /**
     * Title
     */
    title?: string | null;
};

/**
 * ChatDetail
 */
export type ChatDetail = {
    /**
     * Id
     */
    id: string;
    /**
     * Title
     */
    title: string;
    /**
     * Userid
     */
    userId: string;
    /**
     * Createdat
     */
    createdAt: string;
    /**
     * Messages
     */
    messages?: Array<MessageOut>;
};

/**
 * ChatOut
 */
export type ChatOut = {
    /**
     * Id
     */
    id: string;
    /**
     * Title
     */
    title: string;
    /**
     * Userid
     */
    userId: string;
    /**
     * Createdat
     */
    createdAt: string;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * HealthOut
 */
export type HealthOut = {
    /**
     * Status
     */
    status?: string;
    /**
     * Time
     */
    time: string;
    mode: LlmMode;
};

/**
 * LLMMode
 */
export type LlmMode = 'API' | 'Self-hosted';

/**
 * MessageCreate
 */
export type MessageCreate = {
    /**
     * Content
     */
    content: string;
};

/**
 * MessageOut
 */
export type MessageOut = {
    /**
     * Id
     */
    id: string;
    /**
     * Chatid
     */
    chatId: string;
    role: MessageRole;
    /**
     * Content
     */
    content: string;
    /**
     * Createdat
     */
    createdAt: string;
    /**
     * Latencyms
     */
    latencyMs?: number | null;
    /**
     * Prompttokens
     */
    promptTokens?: number | null;
    /**
     * Completiontokens
     */
    completionTokens?: number | null;
};

/**
 * MessageRole
 */
export type MessageRole = 'user' | 'assistant' | 'system';

/**
 * UserOut
 */
export type UserOut = {
    /**
     * Id
     */
    id: string;
    /**
     * Firstname
     */
    firstName: string;
    /**
     * Lastname
     */
    lastName: string;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type HealthGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health';
};

export type HealthGetResponses = {
    /**
     * Successful Response
     */
    200: HealthOut;
};

export type HealthGetResponse = HealthGetResponses[keyof HealthGetResponses];

export type ListChatsData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
    };
    url: '/chats';
};

export type ListChatsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListChatsError = ListChatsErrors[keyof ListChatsErrors];

export type ListChatsResponses = {
    /**
     * Response List Chats
     * Successful Response
     */
    200: Array<ChatOut>;
};

export type ListChatsResponse = ListChatsResponses[keyof ListChatsResponses];

export type CreateChatChatsPostData = {
    body: ChatCreate;
    path?: never;
    query?: never;
    url: '/chats';
};

export type CreateChatChatsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateChatChatsPostError = CreateChatChatsPostErrors[keyof CreateChatChatsPostErrors];

export type CreateChatChatsPostResponses = {
    /**
     * Successful Response
     */
    201: ChatOut;
};

export type CreateChatChatsPostResponse = CreateChatChatsPostResponses[keyof CreateChatChatsPostResponses];

export type DeleteChatData = {
    body?: never;
    path: {
        /**
         * Chat Id
         */
        chat_id: string;
    };
    query?: never;
    url: '/chat/{chat_id}';
};

export type DeleteChatErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteChatError = DeleteChatErrors[keyof DeleteChatErrors];

export type DeleteChatResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteChatResponse = DeleteChatResponses[keyof DeleteChatResponses];

export type GetChatByIdData = {
    body?: never;
    path: {
        /**
         * Chat Id
         */
        chat_id: string;
    };
    query?: never;
    url: '/chat/{chat_id}';
};

export type GetChatByIdErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetChatByIdError = GetChatByIdErrors[keyof GetChatByIdErrors];

export type GetChatByIdResponses = {
    /**
     * Successful Response
     */
    200: ChatDetail;
};

export type GetChatByIdResponse = GetChatByIdResponses[keyof GetChatByIdResponses];

export type UpdateChatData = {
    body: ChatCreate;
    path: {
        /**
         * Chat Id
         */
        chat_id: string;
    };
    query?: never;
    url: '/chat/{chat_id}';
};

export type UpdateChatErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateChatError = UpdateChatErrors[keyof UpdateChatErrors];

export type UpdateChatResponses = {
    /**
     * Successful Response
     */
    200: ChatOut;
};

export type UpdateChatResponse = UpdateChatResponses[keyof UpdateChatResponses];

export type StreamMessageData = {
    body: MessageCreate;
    path: {
        /**
         * Chat Id
         */
        chat_id: string;
    };
    query?: never;
    url: '/chat/{chat_id}/stream';
};

export type StreamMessageErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type StreamMessageError = StreamMessageErrors[keyof StreamMessageErrors];

export type StreamMessageResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type VerifyTokenAuthVerifyPostData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/verify';
};

export type VerifyTokenAuthVerifyPostResponses = {
    /**
     * Successful Response
     */
    200: UserOut;
};

export type VerifyTokenAuthVerifyPostResponse = VerifyTokenAuthVerifyPostResponses[keyof VerifyTokenAuthVerifyPostResponses];
